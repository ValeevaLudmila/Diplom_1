{"uid":"540448b73f9b6e50","name":"Ошибка при принятии заказа: без id заказа","fullName":"tests.test_accept_the_order.TestAcceptOrder#test_accept_order_errors_parametrized","historyId":"d3889cf5651c519480d6f5bd0edae5c0","time":{"start":1758972240055,"stop":1758972240247,"duration":192},"status":"failed","statusMessage":"AssertionError: assert 404 == 400\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <test_accept_the_order.TestAcceptOrder object at 0x0000018706018EE0>\ncreate_courier = [{'firstName': 'Haley', 'login': 'ericvelasquez', 'password': '97439'}, {'login': 'ericvelasquez', 'password': '97439'}, 'ericvelasquez', '97439', 619492], scenario = 'без id заказа', order_id = ''\ncourier_id = 'real', expected_status = 400\n\n    @pytest.mark.parametrize(\"scenario,order_id,courier_id,expected_status\", [\n        (\"без id курьера\", \"real\", \"\", 400),\n        (\"с несуществующим id курьера\", \"real\", 999999, 404),\n        (\"без id заказа\", \"\", \"real\", 400), # Баг: 404 вместо 400\n        (\"с несуществующим id заказа\", 999999, \"real\", 404),\n    ])\n    \n    @allure.title('Ошибка при принятии заказа: {scenario}')\n    def test_accept_order_errors_parametrized(self, create_courier, scenario, order_id, courier_id, expected_status):\n        if order_id == \"real\":\n            order_response = requests.post(f'{Url.MAIN_URL}{Url.POST_CREATING_ORDER}', json={\n                \"firstName\": \"Тест\", \"lastName\": \"Тестов\", \"address\": \"Адрес\",\n                \"metroStation\": 4, \"phone\": \"+7 800 355 35 35\", \"rentTime\": 1,\n                \"deliveryDate\": \"2025-01-01\", \"comment\": \"тест\", \"color\": [\"BLACK\"]\n            })\n            real_order_id = requests.get(f'{Url.MAIN_URL}{Url.Get_ORDER_BY_NUMBER}?t={order_response.json()[\"track\"]}').json().get(\"order\", {}).get(\"id\")\n            used_order_id = real_order_id\n            order_track = order_response.json()[\"track\"]\n        else:\n            used_order_id = order_id\n            order_track = None\n        if courier_id == \"real\":\n            used_courier_id = create_courier[4]\n        else:\n            used_courier_id = courier_id\n        params = {}\n        if used_courier_id != \"\":\n            params[\"courierId\"] = used_courier_id\n        response = requests.put(f'{Url.MAIN_URL}{Url.ORDER_ACCEPT}{used_order_id}', params=params)\n>       assert response.status_code == expected_status\nE       assert 404 == 400\nE        +  where 404 = <Response [404]>.status_code\n\ntests\\test_accept_the_order.py:57: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758972233955,"stop":1758972233956,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_courier","time":{"start":1758972239539,"stop":1758972240055,"duration":516},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"create_courier::0","time":{"start":1758972240339,"stop":1758972240618,"duration":279},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_accept_the_order"},{"name":"subSuite","value":"TestAcceptOrder"},{"name":"host","value":"DESKTOP-21G76GS"},{"name":"thread","value":"18972-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_accept_the_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"courier_id","value":"'real'"},{"name":"expected_status","value":"400"},{"name":"order_id","value":"''"},{"name":"scenario","value":"'без id заказа'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"540448b73f9b6e50.json","parameterValues":["'real'","400","''","'без id заказа'"]}